services:
  db:
    container_name:
    env_file: config/.env.db
    healthcheck:
      test: ["CMD-SHELL", ""]
      interval: 20s
      timeout: 15s
      retries: 3
      start_period: 60s
      start_interval: 5s
    hostname:
    image:
    logging:
      driver: json-file
      options:
        max-file: 2
        max-size: 5m
    networks:
      app-net:
        ipv4_address: 192.168.0.2
    restart: unless-stopped
    stop_grace_period: 30s
    volumes:
      - ./db-persistence:/var/lib/mysql # MySQL, MariaDB
      - ./db-persistence:/var/lib/postgresql/data # PostgreSQL
      - ./db-persistence:/data/db # MongoDB

  app:
    container_name:
    depends_on:
      db:
        condition: service_healthy
    dns:
      - 127.0.0.1
      - 45.90.28.96
      - 45.90.30.96
    env_file: config/.env
    hostname:
    image:
    labels:
      - "traefik.enable=true"
      # Routers
      - "traefik.http.routers.app.rule=Host(`app.${DOMAIN}`)"
      - "traefik.http.routers.app.tls.domains[0].main=app.${DOMAIN}"
      - "traefik.http.routers.app.tls.certresolver=letsencrypt"
      - "traefik.http.routers.app.tls=true"
      - "traefik.http.routers.app.service=app"
      # Services
      - "traefik.http.services.app.loadbalancer.server.port=80"
    logging:
      driver: json-file
      options:
        max-file: 5
        max-size: 10m
    networks:
        app-net:
          ipv4_address: 192.168.0.3
        traefik-net:
          ipv4_address:
    ports:
      - 80
    restart: unless-stopped
    stop_grace_period: 30s
    volumes:
      - ./persistence:/data

networks:
  app-net:
    name: app-internal
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 192.168.0.0/24
          gateway: 192.168.0.1
  traefik-net:
    external: true
    name: traefik-net
